#########################
# Generic bindings      #
#########################
set-option -g prefix C-t
bind r    source-file ~/.tmux.conf
bind t    send-prefix
bind C-t  last-window
bind s    command-prompt
bind C-p  copy-mode -u
bind C-d  detach
bind p    choose-buffer

#########################
# Window management     #
#########################
bind &    select-window -t :1
bind [    select-window -t :2
bind {    select-window -t :3
bind (    select-window -t :4
bind =    select-window -t :5
bind *    select-window -t :6
bind )    select-window -t :7
bind }    select-window -t :8
bind ]    select-window -t :9
bind +    select-window -t :10

bind |    split-window -h
bind _    split-window -v
bind d    select-pane -L
bind n    select-pane -R
bind t    select-pane -U
bind h    select-pane -D
bind o    break-pane

bind -n S-Left      select-pane -L
bind -n S-Right     select-pane -R
bind -n S-Up        select-pane -U
bind -n S-Down      select-pane -D

# ## System clipboard integration
# # C-c: save into system clipboard (+). With preselection.
# bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# # C-v: copy from + clipboard.
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# # C-d: save into selection clipboard (*). With preselection.
# #bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# # C-f: copy from * clipboard.
# bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

#########################
# Config options        #
#########################
set -g        history-limit 50000
set -g        default-terminal "screen-256color"
set-option -g status-keys vi
set -g        display-time 3000
setw -g       aggressive-resize on
set -g        base-index 1
# Mouse can manipulate panes
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
# Set titlebar to [session_name:window_number host] window_name
set-option -g set-titles on
set-option -g set-titles-string '(#I:#W) [#S:#H]'
# Speed up ESC/alt disambig timeout -- helps vim
set-option -sg escape-time 50
# Fix ctrl-arrow, etc.
set-window-option -g xterm-keys on
# Enable mouse scrolling
set-window-option -g mode-mouse on

#########################
# Status bar            #
#########################
# Colors
set -g status-bg white
set -g status-fg black

# Left side
set -g status-left-length 30
set -g status-left '#[fg=blue][ #[fg=yellow]#(whoami)@#h#[default]#[fg=blue] ]#[default]  '

# Inactive windows
set-window-option -g window-status-format '#[fg=cyan,dim]#I#[fg=blue]:#[default]#W#[fg=grey,dim]#F'

# Current window
set-window-option -g window-status-current-format '#[fg=blue](#[fg=cyan]#I#[fg=blue]:#[fg=yellow]#W#[fg=dim]#F#[fg=blue])#[default]'
# Alerted window
#set-window-option -g window-status-alert-fg red
#set-window-option -g window-status-alert-bg white

# Right side
set -g status-right '#[fg=blue][ #[fg=yellow]#S#[default]#[fg=blue] ][ #[fg=green]%Y-%m-%d %H:%M#[default]#[fg=blue] ]#[default]'
